#!/usr/bin/env python

import pygtk
import gtk
import os
import sys
import signal
import csv

cargs = sys.argv

				#Title, Icon, Command
currapps = gtk.ListStore(str, str, str)
path = '/home/' + os.getlogin() + '/.infinity/';
print(path);
with open(path + "startmenu2.data", 'rb') as csvfile:
	csvreader = csv.reader(csvfile, delimiter=',', quotechar='#')
	for row in csvreader:
		if len(row) >= 3:
			currapps.append([row[0], row[1], row[2]])

class MyWindow(gtk.Window):
	
	def __init__(self):
		gtk.Window.__init__(self)
		self.set_title("Add to Startmenu")
		color = gtk.gdk.color_parse('#f5f5f5')
		self.modify_bg(gtk.STATE_NORMAL, color)
		self.set_size_request(500, 200)

		self.mainbox = gtk.HBox()
		self.add(self.mainbox)

		self.imagebox = gtk.Image()
		pixbuf = gtk.icon_theme_get_default().load_icon(cargs[3], 128, 0)
		#sbuf = pixbuf.scale_simple(100,100,gtk.gdk.INTERP_BILINEAR)
		self.imagebox.set_from_pixbuf(pixbuf)
		self.set_icon(pixbuf)
		self.mainbox.pack_start(self.imagebox)

		self.rightbox = gtk.VBox()
		self.mainbox.pack_start(self.rightbox)

		self.lbl_title = gtk.Label()
		self.lbl_title.set_markup("<span size='23000'>" + cargs[1] + "</span>")
		self.rightbox.pack_start(self.lbl_title)
		self.lbl_title.set_size_request(300, 70)

		self.lbl_text = gtk.Label()
		self.lbl_text.set_markup("Would you like to add " + cargs[1] + " to the startmenu?")
		self.lbl_text.set_size_request(300, 100)
		self.rightbox.pack_start(self.lbl_text)

		self.btnbox = gtk.HBox(spacing=20)
		self.rightbox.pack_start(self.btnbox)

		self.btn_add = gtk.Button(label="Add")
		self.btn_add.set_size_request(100, 30)
		self.btn_add.connect("clicked", self.btn_add_click)
		self.btnbox.pack_start(self.btn_add, fill=False)

		self.btn_cancel = gtk.Button(label="No, thanks")
		self.btn_cancel.set_size_request(100, 30)
		self.btn_cancel.connect("clicked", self.btn_cancel_click)
		self.btnbox.pack_start(self.btn_cancel, fill=False)


		lbl_spacing = gtk.Label()
		lbl_spacing.set_size_request(300, 10)
		self.rightbox.pack_start(lbl_spacing)

	def btn_cancel_click(self, widget):
		gtk.main_quit()

	def btn_add_click(self, widget):
		# Add
		updated = False
		for capp in currapps:
			if capp[2] == cargs[2]: #Same command
				capp[0] = cargs[1] #Title
				capp[1] = cargs[3] #Icon
				updated = True

		if updated == False:
			currapps.append([cargs[1], cargs[3], cargs[2]])

		file = open(path + "/startmenu2.data", 'w')
		for capp in currapps:
			print(capp[0] + ": " + capp[1] + "> " + capp[2])
			file.write(capp[0] + ',' + capp[1] + ',' + capp[2] + ',\n')

		file.close()

		gtk.main_quit()


launch = True
for capp in currapps:
	print(capp[2] + "|" + cargs[2])
	if capp[0] == cargs[1] and capp[1] == cargs[3] and capp[2] == cargs[2]:
		launch = False


if launch == True:
	win = MyWindow()
	win.connect("delete-event", gtk.main_quit)
	win.show_all()
	gtk.main()
